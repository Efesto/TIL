[{"doc":"This page has not yet sprouted","title":"This page has not yet sprouted","hpath":"403","content":"[Dendron](https://dendron.so/) (the tool used to generate this site) lets authors selective publish content. You will see this page whenever you click on a link to an unpublished page\n\n![](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/images/not-sprouted.png)","url":"https://www.marcopolita.me/brain/brain/notes/403.html","relUrl":"notes/403.html"},{"doc":"root","title":"root","hpath":"root","content":"\nThis is the root for your Dendron vault.\n\nIf you decide to publish your entire vault, it will be your landing page. You are free to customize any part of this page except the frontmatter at the top, between the `---`. \n","url":"https://www.marcopolita.me/brain/brain","relUrl":"/"},{"doc":"Dev","title":"Dev","hpath":"dev","content":"\n","url":"https://www.marcopolita.me/brain/brain/notes/cb6b8f0c-40b6-42b2-a2b0-feefdd258b0b.html","relUrl":"notes/cb6b8f0c-40b6-42b2-a2b0-feefdd258b0b.html"},{"doc":"Db","title":"Db","hpath":"dev.db","content":"\n","url":"https://www.marcopolita.me/brain/brain/notes/89a89035-93e6-46e8-93d7-190bf0962225.html","relUrl":"notes/89a89035-93e6-46e8-93d7-190bf0962225.html"},{"doc":"Postgresql","title":"Postgresql","hpath":"dev.db.postgresql","content":"\n![[dev.db.mysql.gotchas]]\n\n","url":"https://www.marcopolita.me/brain/brain/notes/ec4e2203-affb-46b5-9933-5a6bc03210e0.html","relUrl":"notes/ec4e2203-affb-46b5-9933-5a6bc03210e0.html"},{"doc":"Mysql","title":"Mysql","hpath":"dev.db.mysql","content":"\n[[dev.db.mysql.gotchas]]","url":"https://www.marcopolita.me/brain/brain/notes/c5eec39a-31a0-4aac-ba14-3ba12c0d8c9a.html","relUrl":"notes/c5eec39a-31a0-4aac-ba14-3ba12c0d8c9a.html"},{"doc":"Gotchas","title":"Gotchas","hpath":"dev.db.mysql.gotchas","content":"\n- Mysql uses empty strings and meaningless values for default null columns\n- MySql changes decimal input according to the set precision (eg 2,0 precision with 100 becomes 99)\n- In Mysql, `1/0 == null`\n- Mysql truncates string input longer than max length\n- Invalid dates like `31st of february == 0000-00-00`\n- String in decimal `== 0`","url":"https://www.marcopolita.me/brain/brain/notes/c83358fb-678a-40c9-a0c8-5e6f2234b822.html","relUrl":"notes/c83358fb-678a-40c9-a0c8-5e6f2234b822.html"},{"doc":"Quickstart","title":"Quickstart","hpath":"dendron","content":"\nWelcome to Dendron! This guide will help get you started with your knowledge base.\n\n## The Trail 🥾\n\nHere are the basics of Dendron so you can get started growing your knowledge base.\n- [ ] Create your first note. \n    - [ ] Dendron uses the [lookup](https://www.dendron.so/notes/a7c3a810-28c8-4b47-96a6-8156b1524af3.html#lookup-menu) command to create. So, hit CMD+L (or ctrl+L if you're on Windows) to bring up the lookup bar, type in a new note name and hit enter to create it. You can also run the lookup command through the command palette \"Dendron: Lookup\". \n    - [ ] Wiki-style links are supported. If the note doesn't exist, we'll create the note for you. For example, just try [[this link]] from the editor view.\n- [ ] Find your notes. Dendron really shines when you need to look up notes quickly. For this, you use *drumroll* the lookup command (again). Just hit CMD/ctrl+L and you can search your entire set of notes.\n- [ ] To delete a note, navigate to it and use the \"Dendron: Delete Node\" command. As with everything else in VSCode, bring up the command palette with CMD/ctrl+shift+P and run the command.  \n- [ ] Use a [snippet](https://www.dendron.so/notes/9eca1992-7540-4d9d-97fb-328b27748b2c.html) for quick note templates\n- [ ] Insert an [image](https://www.dendron.so/notes/a91fd8da-6895-49fe-8164-a17acd8d9a17.html)\n- [ ] Create some [links](https://www.dendron.so/notes/3472226a-ff3c-432d-bf5d-10926f39f6c2.html)\n- [ ] [Publish](https://www.dendron.so/notes/73d395c9-5041-4d0d-9db7-080d9586136e.html) your vault \n- [ ] Join us on [discord](https://discord.com/invite/6j85zNX) and discuss all things knowledge management with your fellow trail blazers.\n- [ ] For more information, see Dendron's basic [concepts](https://www.dendron.so/notes/c6fd6bc4-7f75-4cbb-8f34-f7b99bfe2d50.html)\n## The Woods 🌲\n\nThis section covers advanced functionality in Dendron. Become a seasoned backpacker by mastering these trails.\n- [ ] Explore additional features from [Dendron's bundled extensions](https://www.dendron.so/notes/301e4129-6933-4be7-a4bd-8125171360d8.html)\n- [ ] Learn about [schemas](https://www.dendron.so/notes/c5e5adde-5459-409b-b34d-a0d75cbb1052.html#schemas) - a flexible type system for all your notes\n- [ ] Check out our [case studies](https://www.dendron.so/notes/34ee4bcf-60e9-4031-a4c0-26113b5acb80.html)\n- [ ] Read our [FAQ](https://www.dendron.so/notes/683740e3-70ce-4a47-a1f4-1f140e80b558.html)\n- [ ] Explore the [graph view](https://www.dendron.so/notes/587e6d62-3c5b-49b0-aedc-02f62f0448e6.html)\n- [ ] Execute custom [Dendron commands](https://www.dendron.so/notes/eea2b078-1acc-4071-a14e-18299fc28f47.html)\n- [ ] Understand [frontmatter](https://www.dendron.so/notes/ffec2853-c0e0-4165-a368-339db12c8e4b.html)\n- [ ] Adopt a [pod](https://www.dendron.so/notes/66727a39-d0a7-449b-a10d-f6c438185d7f.html)\n- [ ] Create a [special note](https://www.dendron.so/notes/5c213aa6-e4ba-49e8-85c5-1bdcb33ce202.html)\n\n## The Wilderness ⛰️\n\nThis section covers additional topics and the wider ecosystem around Dendron.\n\n- [ ] Find [recipes](https://www.dendron.so/notes/401c5889-20ae-4b3a-8468-269def4b4865.html) to common operations (or contribute your own)\n- [ ] Found an issue or want to submit a feature request? Do so on [GitHub](https://github.com/dendronhq/dendron/issues)\n- [ ] See and vote on what's coming next by checking out our [public roadmap](https://github.com/orgs/dendronhq/projects/1)\n- [ ] Get familiar with [editing](https://code.visualstudio.com/docs/editor/codebasics) in VS Code, the editor that Dendron is built upon\n- [ ] Stay tuned for more wilderness coming soon!\n","url":"https://www.marcopolita.me/brain/brain/notes/e86ac3ab-dbe1-47a1-bcd7-9df0d0490b40.html","relUrl":"notes/e86ac3ab-dbe1-47a1-bcd7-9df0d0490b40.html"},{"doc":"Dendron","title":"Dendron","hpath":"dendron.welcome","content":"\n# Welcome to Dendron 🌲\n\n![](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/logo-256.png)\n\nDendron is a new approach to note taking, one that combines the freedom of Roam's *every note exists everywhere philosophy* with the organization provided by *flexible hierarchies*. \n\nWe call this the [hierarchy first approach](https://www.kevinslin.com/notes/3dd58f62-fee5-4f93-b9f1-b0f0f59a9b64.html) to note taking.\n\n## What is a Dendron?\n1. Dendron is the greek word for tree. It's a reference to the hierarchal note taking that Dendron(3) enables. \n2. Dendron is another word for [dendrite](https://en.wikipedia.org/wiki/Dendrite) which is an extension of the nerve cell that sends and receives signals in the brain. Think of Dendron(3) as a digital nervous system that helps you consolidate all the information that you care about in the fastest and most efficient way possible.\n3. Dendron is a local-first, markdown based, hierarchical note taking tool. It is meant to help you build, organize, and share knowledge bases of any size.\n\n## How do I get started?\n\n1. Launch the _command bar_ inside vscode:\n    - Linux: `Ctrl+Shift+P`\n    - macOS: `Cmd+Shift+P`\n    - Windows: `Ctrl+Shift+P`\n2. Paste the following command and press `Enter`:\n\n```sh\n> Dendron: Initialize Workspace\n```\n\n![Initialize workspace](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/dendron-init.gif)\n\nWhen the workspace opens, it will show dialogue to install additional recommended extensions. \n","url":"https://www.marcopolita.me/brain/brain/notes/05774b2e-ebf7-4bbc-8171-ad191ba0ae0a.html","relUrl":"notes/05774b2e-ebf7-4bbc-8171-ad191ba0ae0a.html"},{"doc":"Confs","title":"Confs","hpath":"confs","content":"\n","url":"https://www.marcopolita.me/brain/brain/notes/e8015a3d-65f6-4bfe-955c-d362021aadcd.html","relUrl":"notes/e8015a3d-65f6-4bfe-955c-d362021aadcd.html"},{"doc":"GOTOpia 2020","title":"GOTOpia 2020","hpath":"confs.gotopia_2020","content":"\n## War is Peace, Freedom is Slavery, Ignorance is Strength, Scrum is Agile - Allen Hollub\n![](/assets/images/confs.gotopia_2020.1.png)\n* What is Agile and what is not\n* Is\n  * Continuous communication\n  * fast feedback REALLY fast\n    * by pushing Value to the users and receiving feedback\n    * Being able to change fast\n  * focus on people\n  * Self-organizing teams\n    * Which do their own hiring\n    * Which change their own processes\n      * An organization where everyone works in the same way is a red flag for agility\n    * A small team number, between 3 and 6, allows an effective communication\n      * In a communication graph, the less edges, the better\n    * Inter team communication happens organizally without any overhead push\n* Scrum is a wrapper for Agile, is not Agile\n  * It doesn't make sense without XP, XP without Scrum works just fine\n* You cannot move an agile process that worked in a place to another and expect success\n* Plans fail, always, because we are learning\n* Technical excellence allows fast changes\n\n## Prioritizing Technical Debt as if Time and Money Matters - Adam Tornhill\n* Prioritizing Technical debt requires determining business impact\n* Identifiyng critical points for tech debt requires identifying hotspots\n  * Code complexity combined with frequency of change\n  * Eventual loss of knowledge by identifying codebase with bus number 1\n* The perception of tech debt includes social factors\n  * A code might be perceived as messy if a team is not familiar with it\n* Tools/techniques\n  * Codescene.io\n  * Adam Tornhill repository\n  * X-Ray code insight\n  * Check his books\n    * Analyzing code as a crime scene\n* Lehman's laws of software dev\n\n## Three Practices for Effective DevOps Adoption - Eoin Woods\n* __Devops__ as a conseguency of Agility movement\n  * The point of following Devops is speed and control for achieving Continuous Delivery\n* > Cross-functional teams, delivering and operating software as a visible, measurable flow of value in a continuous and sutainable way\n  * Continuous Delivery\n  * C.A.L.M.S.\n* Devops needs a regular, sustainable and predicatble flow of valuable changes\n* __Agile Working__\n  * Requires empowered, informed, decisive POs\n  * Empowered cross-functional team\n  * High quality backlog\n  * Consistent and sufficient code quality\n* __Pipeline__ - Stability, Confidence, consistency and repeatability\n  * Single automated path from commit to deploy\n  * As a collaboration point\n  * As a visible visualization of path to production\n* __Enabler Team__\n  * Build useful shared devop tools\n  * Develop culture by example\n  * Bring and transfer technical knowledge\n    * EG: building the first pipeline\n  *  ![some enabler team models](/assets/images/confs.gotopia_2020.2.png)\n  * Enabler team typical dissolve\n* 4 eyes principle requires active partecipation of unlocking managers\n  * Part of the culture\n  * Part of the sustainability - eventually\n  * Reduce the friction\n\n## Dave Thomas\n* Mentorship is a way to teach and to learn\n* An organization where is too risky to let a Junior to put code in production has some problem\n* We as Scientists are experimenting and errors are part of that\n\n## Take Aways\n* have a look at gRPC\n* [Netflix full cycle development for team organization](https://netflixtechblog.com/full-cycle-developers-at-netflix-a08c31f83249)\n* Event storming as a project kick off process could be worthy to give a read\n* Event sourcing, implementations, problems and solutions\n* Software development metrics - Time in process, percentages (as a meaning for estimation), identify the real goal, consider, fixed cost time (like commuting)\n* Normal distribution for estimation doesn't make sense, what makes sense is average time of things in processing time\n* Enabler team is a really cool concept for pushing devops\n\n","url":"https://www.marcopolita.me/brain/brain/notes/4ddc16fc-0bf8-42ee-b292-5214cee9ab0c.html","relUrl":"notes/4ddc16fc-0bf8-42ee-b292-5214cee9ab0c.html"},{"doc":"Books","title":"Books","hpath":"books","content":"\n## Dev\n\n* [[books.ddd]]\n* [[books.sre]]\n","url":"https://www.marcopolita.me/brain/brain/notes/eeaba8d3-e53d-4832-a877-45019449703d.html","relUrl":"notes/eeaba8d3-e53d-4832-a877-45019449703d.html"},{"doc":"SRE Book from Google","title":"SRE Book from Google","hpath":"books.sre","content":"https://landing.google.com/sre/sre-book/toc/\n\n> Hope is not a strategy\n\n- The classic Developers + Operators approach to build and maintain systems is surpassed\n  - It generates contrast between desire for a fast system change delivery vs desire for system stability\n- SRE can be  ̑seen as a subset of Devops\n- An SRE team is composed by a variagated set of skills spacing from developing to system maintenance\n  - People who gets easily irritated by repeatitive and boring manual tasks and therefor wish to automate them are a good fit\n  - *Toil* is the word\n- SRE embraces errors as a natural component of a system\n  - Defines *Errors budget* as the possible slack to conceed to a system in terms of errors\n  - A new feature takes a certain amount of error budget and any new increment in complexity of the system requires a payment of it\n  - 70% of outages are due changes to a live system\n  \n# Emergency Response\n- A playbook listing what to do in an emergency situation used by even an unexperienced operator is more effective than an expert without it\n\n\n# Capacity Planning\n- Capacity planning should take in consideration organic and inorganic growth in product usage\n  - Organic - product adoption and usage\n  - Inorganic - events like launches, marketing campaigns and so on\n- Several steps for capacity planning are mandatory:\n  - Organic demand forecast\n  - Knowledge of inorganic demand\n  - Regular load testing\n\n# SRE Principles\n- Embracing Risk\n- Eliminating Toil\n- SLOs instead of SLAs\n- Monitoring\n- Simplicity\n\n- Time based availability `Availability = uptime / (uptime + downtime)`\n- Aggregate availability `successful requests / total requests`\n  - Useful for systems that do not typically serve end users directly\n\n(Continues from CHP 3)\n\n\n","url":"https://www.marcopolita.me/brain/brain/notes/910ce3c9-4718-4aa6-83a9-1cec487f3ab8.html","relUrl":"notes/910ce3c9-4718-4aa6-83a9-1cec487f3ab8.html"},{"doc":"Domain Driven Design - Eric Evans","title":"Domain Driven Design - Eric Evans","hpath":"books.ddd","content":"\n## Part 1 - Putting the Domain model to Work\n\n* Tackling complexity requires \n  * Common language and vocabulary\n  * Skill sharing\n  * A close relationship and constant communication between domain experts, usually business people, and technical experts\n* The Domain Model is the *Obiquitous Language* that helps to put together experts and technical jargons\n* The Domain Model can be expressed with code and diagrams\n  * Diagrams *are not* the model, they are a representation\n  * The code is the absolute truth because it implements the model and every detail of it\n  * Well implemented and clear code can also act as a good representation\n  * Code doesn't hide details for which can be necessary to have an additional diagram\n  * Any additional diagram must be maintained and updated with changes in the code, reason for which is good to use them as a less detailed representation of the model\n* Is important to share the language of the Domain Model inside the whole organization in order to reduce the explaination time and have consistency\n* These concept can be applied also to microservices but the need of a non-code documentation is higher, nonetheless, the code will still document the details of the implementation of the single components of the model\n\n### Chapter 3 - Binding Model and implementation\n\n* Tightly relating the code to an underlying model gives the code meaning and makes the model relevant\n* Model-Driven design discards the dichotomy of analysis model and design for a single model that serves both purposes\n  * Support to an *Obiquitous Language*\n  * Code as an expression of the model\n  * OOP as modeling paradigm\n  * Same applies to *modelers* and *implementers*\n* Letting the bones show means to expose a model to users rather than hiding it\n  * Let the User model and the design/implementation model to be close\n  * Internet Explorer favs stored as files but not explicitly showed as so to the user\n\n## Part 2 - The Building blocks of a Model-Driven design\n### \n\n## NOTES\n\n* UML is not so bad if kept informal\n* I need to find a tool for sharing informal diagrams\n  * No registration required\n  * Easy to learn\n  * Pragmatic\n  * Kind like Etherpad for diagrams\n\n\n","url":"https://www.marcopolita.me/brain/brain/notes/38da90b2-6b96-4da7-be74-80a4c127daf2.html","relUrl":"notes/38da90b2-6b96-4da7-be74-80a4c127daf2.html"},{"doc":"Changelog","title":"Changelog","hpath":"root.changelog","content":"","url":"https://www.marcopolita.me/brain/brain/notes/changelog.html","relUrl":"notes/changelog.html"}]
